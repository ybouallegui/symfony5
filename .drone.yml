kind: pipeline
name: build-for-test
type: docker

platform:
  os: linux
  arch: amd64

steps:
- name: install
  image: php:7.2-fpm
  settings:
    dockerfile: docker/php/Dockerfile
  commands:
  #   - echo 'memory_limit = 512M' >> /usr/local/etc/php/conf.d/docker-php-memlimit.ini;
  #   - docker-php-ext-install pdo_mysql
  #   - pecl install apcu
  #   - apt-get update
  #   - apt-get install zlib1g-dev
  #   - docker-php-ext-install zip
  #   - docker-php-ext-enable apcu
  #   - cd apps/my-symfony-app
  #   - php -r "copy('https://getcomposer.org/installer', 'composer-setup.php');" \ && php -r "if (hash_file('SHA384', 'composer-setup.php') === 'baf1608c33254d00611ac1705c1d9958c817a1a33bce370c0595974b342601bd80b92a3f46067da89e3b06bff421f182') { echo 'Installer verified'; } else { echo 'Installer corrupt'; unlink('composer-setup.php'); } echo PHP_EOL;" \ && php composer-setup.php --filename=composer \ && php -r "unlink('composer-setup.php');" \ && mv composer /usr/local/bin/composer
    - composer install
    - bin/console ca:cl
    - bin/console doctrine:database:drop --force
    - bin/console doctrine:database:create
  environment:
    DATABASE_URL:
      from_secret: DATABASE_URL
    APP_ENV: 'dev'

- name: quality-test
  image: php:7.2-fpm
  commands:
    #- phpcs --standard=PSR1,PSR2 --extensions=php ./apps/my-symfony-app/src
    - cd apps/my-symfony-app
    - bin/console lint:twig src
    - bin/console lint:xliff src
    - bin/console lint:yaml config src
  depends_on:
  - install

- name: notify
  image: plugins/slack
  settings:
    webhook:
      from_secret: slack_webhook
    link_names: true  
    template: >
      {{#success build.status}}
        build:{{build.number}} succeeded {{build.link}}. Good job.
      {{else}}
        build: {{build.number}} failed {{build.link}}. Fix me please.
      {{/success}}  
  depends_on:
  - quality-test
  when:
    status: [ success, failure ]
    event:
    include:
    - pull_request

- name: notify-PR
  image: plugins/slack
  settings:
    webhook:
      from_secret: slack_webhook
    link_names: true    
    template: >
      {{build.link}} New Build has been started, created by ({{build.author}}). think to review after build success.
  when:
    event:
    include:
    - pull_request


services:
- name: mysql
  image: mysql:5.7
  ports:
  - 3306
  environment:
    MYSQL_ROOT_PASSWORD:
      from_secret: MYSQL_ROOT_PASSWORD
    MYSQL_DATABASE:
      from_secret: MYSQL_DATABASE
    MYSQL_USER:
      from_secret: MYSQL_USER
    MYSQL_PASSWORD:
      from_secret: MYSQL_PASSWORD

trigger:
  event:
    include:
    - pull_request

kind: pipeline
type: kubernetes
name: default

steps:
- name: greeting
  image: golang:1.12
  commands:
  - go build
  - go test